# Secrets for Trading Bot
# =======================
# IMPORTANT: This file contains template secrets
# Replace placeholder values with actual secrets before deployment
# Use kubectl create secret or external secret management

apiVersion: v1
kind: Secret
metadata:
  name: trading-bot-secrets
  namespace: trading-bot
  labels:
    app.kubernetes.io/name: trading-bot
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Database Configuration
  DATABASE_URL: "postgresql://user:password@postgres-service:5432/trading_bot"
  
  # Supabase Configuration
  SUPABASE_URL: "https://your-project.supabase.co"
  SUPABASE_ANON_KEY: "your-supabase-anon-key"
  SUPABASE_SERVICE_ROLE_KEY: "your-supabase-service-role-key"
  
  # Trading API Keys
  ALPACA_API_KEY: "your-alpaca-api-key"
  ALPACA_SECRET_KEY: "your-alpaca-secret-key"
  COINGECKO_API_KEY: "your-coingecko-api-key"
  GROQ_API_KEY: "your-groq-api-key"
  
  # External Services
  COMPOSER_MCP_URL: "https://ai.composer.trade/mcp"
  
  # Redis Password
  REDIS_PASSWORD: "your-redis-password"
  
  # InfluxDB Configuration
  INFLUXDB_ADMIN_USER: "admin"
  INFLUXDB_ADMIN_PASSWORD: "your-influxdb-admin-password"
  INFLUXDB_USER: "trader"
  INFLUXDB_USER_PASSWORD: "your-influxdb-user-password"
  
  # Monitoring Configuration
  GRAFANA_ADMIN_USER: "admin"
  GRAFANA_ADMIN_PASSWORD: "your-grafana-password"
  
  # Alert Configuration
  SMTP_HOST: "smtp.gmail.com"
  SMTP_PORT: "587"
  SMTP_USER: "alerts@tradingbot.com"
  SMTP_PASSWORD: "your-smtp-password"
  
  # Webhook URLs for alerts
  SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/your/slack/webhook"
  DISCORD_WEBHOOK_URL: "https://discord.com/api/webhooks/your/webhook"
  TELEGRAM_BOT_TOKEN: "your-telegram-bot-token"
  TELEGRAM_CHAT_ID: "your-telegram-chat-id"
  
  # JWT and Encryption
  JWT_SECRET: "your-jwt-secret-key"
  ENCRYPTION_KEY: "your-32-character-encryption-key"
  
  # Cloud Provider Secrets (if using managed services)
  AWS_ACCESS_KEY_ID: "your-aws-access-key"
  AWS_SECRET_ACCESS_KEY: "your-aws-secret-key"
  AWS_REGION: "us-east-1"
  
  # Monitoring API Keys
  NEW_RELIC_LICENSE_KEY: "your-new-relic-license-key"
  DATADOG_API_KEY: "your-datadog-api-key"

---
# TLS Secret for HTTPS (if using custom certificates)
apiVersion: v1
kind: Secret
metadata:
  name: trading-bot-tls
  namespace: trading-bot
  labels:
    app.kubernetes.io/name: trading-bot
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and key
  # Replace with your actual TLS certificate
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t...

---
# Registry Secret for private container images
apiVersion: v1
kind: Secret
metadata:
  name: trading-bot-registry
  namespace: trading-bot
  labels:
    app.kubernetes.io/name: trading-bot
    app.kubernetes.io/component: registry
type: kubernetes.io/dockerconfigjson
data:
  # Docker registry authentication
  # Generate with: kubectl create secret docker-registry trading-bot-registry --docker-server=your-registry --docker-username=your-username --docker-password=your-password --docker-email=your-email
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5leGFtcGxlLmNvbSI6eyJ1c2VybmFtZSI6InVzZXIiLCJwYXNzd29yZCI6InBhc3MiLCJlbWFpbCI6InVzZXJAZXhhbXBsZS5jb20iLCJhdXRoIjoiZFhObGNqcHdZWE56In19fQ==

---
# External Secrets Operator Configuration (if using)
# This integrates with AWS Secrets Manager, Azure Key Vault, etc.
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: trading-bot-secret-store
  namespace: trading-bot
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        secretRef:
          accessKeyId:
            name: aws-secret
            key: access-key-id
          secretAccessKey:
            name: aws-secret
            key: secret-access-key

---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: trading-bot-external-secrets
  namespace: trading-bot
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: trading-bot-secret-store
    kind: SecretStore
  target:
    name: trading-bot-external-secrets
    creationPolicy: Owner
  data:
  - secretKey: database-url
    remoteRef:
      key: trading-bot/database-url
  - secretKey: alpaca-api-key
    remoteRef:
      key: trading-bot/alpaca-api-key
  - secretKey: alpaca-secret-key
    remoteRef:
      key: trading-bot/alpaca-secret-key