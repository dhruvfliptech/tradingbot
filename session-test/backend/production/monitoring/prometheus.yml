# Prometheus Configuration for Trading Bot Monitoring

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'trading-bot'
    environment: 'production'

# Rule files
rule_files:
  - "/etc/prometheus/rules/*.yaml"

# Alerting configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Trading Bot Metrics Exporter
  - job_name: 'trading-metrics'
    static_configs:
      - targets: ['trading-metrics-exporter:8000']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Health Check Service
  - job_name: 'health-checks'
    static_configs:
      - targets: ['health-checker:8080']
    scrape_interval: 30s
    metrics_path: /health/metrics
    scrape_timeout: 5s

  # Node Exporter (System Metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics

  # cAdvisor (Container Metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics

  # Redis Exporter
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics

  # Application Services (if running separately)
  - job_name: 'ml-service'
    static_configs:
      - targets: ['ml-service:8001']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  - job_name: 'rl-service'
    static_configs:
      - targets: ['rl-service:8002']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Database metrics (if PostgreSQL exporter is available)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 60s
    metrics_path: /metrics

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 60s
    metrics_path: /metrics

  # Alertmanager metrics
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 60s
    metrics_path: /metrics

  # Loki metrics
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    scrape_interval: 60s
    metrics_path: /metrics

  # Service Discovery for Docker containers
  - job_name: 'docker-services'
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 60s
    relabel_configs:
      - source_labels: [__meta_docker_container_label_monitoring_service]
        target_label: service
      - source_labels: [__meta_docker_container_label_monitoring_component]
        target_label: component
      - source_labels: [__meta_docker_container_name]
        target_label: container
      - source_labels: [__address__]
        regex: '([^:]+):.*'
        target_label: __address__
        replacement: '${1}:8080'

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true

# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint"
#     basic_auth:
#       username: "username"
#       password: "password"

# Recording rules for aggregated metrics
recording_rules:
  - name: trading_aggregations
    interval: 30s
    rules:
      - record: trading:portfolio_value_change_rate
        expr: rate(trading_portfolio_value_usd[5m])
      
      - record: trading:total_pnl
        expr: trading_unrealized_pnl_usd + trading_realized_pnl_usd
      
      - record: trading:hourly_return_pct
        expr: rate(trading_total_return[1h]) * 100
      
      - record: trading:trades_per_hour
        expr: rate(trading_trades_total[1h]) * 3600

  - name: system_aggregations
    interval: 30s
    rules:
      - record: system:cpu_usage_avg
        expr: avg(system_cpu_usage_percent)
      
      - record: system:memory_usage_avg
        expr: avg(system_memory_usage_percent)
      
      - record: system:error_rate_total
        expr: rate(errors_total[5m])

  - name: risk_aggregations
    interval: 30s
    rules:
      - record: risk:portfolio_risk_score
        expr: (risk_var_95_percent * 0.4) + (risk_position_concentration * 0.3) + (risk_leverage_ratio / 10 * 0.3)
      
      - record: risk:drawdown_severity
        expr: abs(trading_max_drawdown) / 20  # Normalize to 0-1 scale where 20% = 1.0

# Query logging (optional)
# query_log_file: /var/log/prometheus_queries.log